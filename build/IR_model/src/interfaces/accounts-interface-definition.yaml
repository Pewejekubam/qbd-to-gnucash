# QBD-to-GnuCash Account Module Interface Definition
# Version: v1.0.0
# Compatible Core PRD: v3.6.3
# Compatible Module PRD: v1.1.1

# 1. Core Interface Contract

## 1.1 Module Contract: accounts.py
type: module
name: accounts
entry_point: run_accounts_pipeline
dispatch_key: "!ACCNT"

input_contract:
  type: TypedDict
  name: DispatchPayload
  fields:
    section: 
      type: str
      value: "!ACCNT"
    records:
      type: List[Dict[str, Any]]
      description: List of parsed account records
    input_path:
      type: str
      description: Original source file path
    output_dir:
      type: str
      description: Target directory for outputs
    log_path:
      type: str
      description: Log file path
    mapping_config:
      type: Dict[str, Any]
      description: Account mapping configuration
    extra_config:
      type: Optional[Dict[str, Any]]
      description: Additional configuration

output_contract:
  - type: File
    format: CSV
    path: "{output_dir}/accounts.csv"
    schema: GnuCashAccountImport
  - type: ExitCode
    values:
      0: Success
      1: Critical failure
      2: Validation errors
  - type: LogFile
    path: "{log_path}"
    format: Structured

# 2. Interface Contracts

## 2.1 Public Interfaces

### run_accounts_pipeline
```python
def run_accounts_pipeline(payload: DispatchPayload) -> None:
    """Entry point for processing QBD !ACCNT list."""
```
exceptions:
  - IIFParseError: Dispatch validation failures
  - MappingLoadError: Mapping file issues
  - AccountsTreeError: Hierarchy construction failures
  - OutputError: CSV generation issues

### load_mapping
```python
def load_mapping(user_mapping_path: Optional[str] = None) -> Dict[str, Any]:
    """Load and merge mapping files for QBD to GnuCash account types."""
```
exceptions:
  - MappingLoadError: Required files missing/unreadable

### build_accounts_tree
```python
def build_accounts_tree(records: List[Dict[str, Any]], mapping: Dict[str, Any]) -> Dict[str, Any]:
    """Build and validate account hierarchy."""
```
exceptions:
  - AccountsTreeError: Invalid hierarchy

# 3. Data Structure Schemas

## 3.1 Account Record Schema
```typescript
interface AccountRecord {
  NAME: string;
  ACCNTTYPE: string;
  DESC?: string;
  PARENT?: string;
  BALANCE?: string;
  TIMESTAMP?: string;
}
```

## 3.2 Mapping File Schema
```json
{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "account_types": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "gnucash_type": {"type": "string"},
          "hierarchy_path": {"type": "string"}
        },
        "required": ["gnucash_type", "hierarchy_path"]
      }
    },
    "default_rules": {
      "type": "object",
      "additionalProperties": {"type": "string"}
    }
  },
  "required": ["account_types", "default_rules"]
}
```

## 3.3 GnuCash Account CSV Schema
```json
{
  "type": "object",
  "properties": {
    "account_type": {
      "type": "string",
      "enum": ["ASSET", "LIABILITY", "INCOME", "EXPENSE", "EQUITY"]
    },
    "full_name": {
      "type": "string",
      "pattern": "^[^:]+(?::[^:]+)*$"
    },
    "name": {"type": "string"},
    "description": {"type": "string"},
    "placeholder": {"type": "boolean"}
  },
  "required": ["account_type", "full_name", "name"]
}
```

# 4. Dependencies Map

## 4.1 Direct Dependencies
- accounts_mapping.py (v1.0.7):
  - Purpose: Account type mapping and lookups
  - Interface: load_mapping
  - Required by: run_accounts_pipeline

- accounts_tree.py:
  - Purpose: Account hierarchy construction
  - Interface: build_accounts_tree
  - Required by: run_accounts_pipeline

- accounts_validation.py (v1.0.2):
  - Purpose: Final validation
  - Interface: run_validation_pass
  - Required by: run_accounts_pipeline

## 4.2 Common Utilities
- error_handler.py:
  - Purpose: Exception definitions
  - Classes: IIFParseError, MappingLoadError, AccountsTreeError
  - Required by: All modules

- logging.py (v1.0.4):
  - Purpose: Centralized logging
  - Interface: setup_logging
  - Required by: All modules

## 4.3 Configuration Files
- accounts_mapping_baseline.json:
  - Purpose: Default mappings
  - Required by: accounts_mapping.py
  - Schema: MappingFileSchema

- accounts_mapping_specific.json:
  - Purpose: User overrides
  - Required by: accounts_mapping.py
  - Schema: MappingFileSchema

# 5. Validation Rules

## 5.1 Input Validation
- Valid QuickBooks account types
- One AR and one AP root account
- No orphaned children/circular hierarchies
- Required fields non-null

## 5.2 Mapping Rules
- All keys resolve to known GnuCash types
- Default rules for unmapped types
- Valid hierarchy paths

## 5.3 Output Rules
- Valid GnuCash CSV format
- Unique account paths
- Proper placeholder flags

# 6. Version Compatibility

compatible_versions:
  core_prd: "3.6.3"
  governance_model: "2.3.10"
  logging_module: "1.0.4"
  mapping_module: "1.0.7"
  validation_module: "1.0.2"
  python: ">=3.8"
