# Version Resolution Rules for QBD-to-GnuCash Converter
# Version: v1.0.0
# Compatible Core PRD: v3.6.3
# Governance Model: v2.3.10

# 1. Cross-module Dependencies Resolution
dependency_resolution:
  rules:
    # Rule for direct dependencies
    - name: direct_dependency
      enforcement: strict
      conditions:
        - module_version >= min_required_version
        - module_version.major == required_version.major
        - module_version.minor >= required_version.minor
      resolution:
        on_failure: reject
        fallback: none
    
    # Rule for transitive dependencies
    - name: transitive_dependency
      enforcement: strict
      resolution_order: breadth_first
      conditions:
        - all_dependencies_resolved
        - no_circular_dependencies
        - version_constraints_satisfied
      conflict_resolution:
        strategy: highest_compatible_version
        tie_breaker: latest_timestamp

  version_ranges:
    core:
      min_version: "3.6.0"
      max_version: "3.7.0"
      excluded_versions: ["3.6.2-alpha"]
    
    modules:
      accounts:
        min_version: "1.1.0"
        compatible_with: ["1.1.x"]
      accounts_mapping:
        min_version: "1.0.7"
        compatible_with: ["1.0.x"]
      logging:
        min_version: "1.0.4"
        compatible_with: ["1.0.x", "1.1.x"]

# 2. Schema Version Compatibility
schema_compatibility:
  validation_rules:
    # Core schema evolution rules
    - name: core_schema
      versioning:
        major: ["breaking_changes", "schema_structure_changes"]
        minor: ["field_additions", "optional_features"]
        patch: ["documentation", "clarifications"]
      backward_compatibility:
        required: true
        max_versions_back: 2
    
    # Module schema rules
    - name: module_schema
      versioning:
        major: ["interface_changes", "data_structure_changes"]
        minor: ["field_additions", "new_validations"]
        patch: ["fixes", "documentation"]
      compatibility_matrix:
        core:
          "3.6.x": ["1.0.x", "1.1.x"]
          "3.7.x": ["1.1.x"]
  
  migration_rules:
    auto_upgrade:
      allowed: true
      conditions:
        - patch_version_only
        - no_breaking_changes
        - tests_pass
    manual_upgrade:
      required_for:
        - major_version_changes
        - schema_structure_changes
      documentation_required: true

# 3. Interface Contracts Versioning
interface_versioning:
  contract_rules:
    - name: public_interface
      versioning:
        major:
          - signature_changes
          - return_type_changes
          - parameter_changes
        minor:
          - new_optional_parameters
          - extended_return_types
        patch:
          - documentation_updates
          - error_message_improvements
      compatibility:
        backward: required
        forward: recommended
    
    - name: internal_interface
      versioning:
        major:
          - any_breaking_change
        minor:
          - new_capabilities
        patch:
          - internal_improvements
      scope: module_internal
  
  stability_guarantees:
    public_apis:
      deprecation_policy:
        min_notice: 1_major_version
        grace_period: 2_minor_versions
      breaking_changes:
        allowed_in: major_version_only
        notification: required
    
    internal_apis:
      changes_allowed: same_major_version
      notification: recommended

  version_lock_enforcement:
    mode: strict
    exceptions:
      - type: patch_version
        condition: security_fix
      - type: minor_version
        condition: critical_bugfix
    validation:
      pre_commit: true
      ci_pipeline: true
      release_gate: true
